//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.225
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace TGis.Viewer.TGisRemote {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GisCarInfo", Namespace="http://schemas.datacontract.org/2004/07/TGis.RemoteContract")]
    [System.SerializableAttribute()]
    public partial class GisCarInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PathIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PathId {
            get {
                return this.PathIdField;
            }
            set {
                if ((this.PathIdField.Equals(value) != true)) {
                    this.PathIdField = value;
                    this.RaisePropertyChanged("PathId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNum {
            get {
                return this.SerialNumField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumField, value) != true)) {
                    this.SerialNumField = value;
                    this.RaisePropertyChanged("SerialNum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GisPathInfo", Namespace="http://schemas.datacontract.org/2004/07/TGis.RemoteContract")]
    [System.SerializableAttribute()]
    public partial class GisPathInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] PointsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] Points {
            get {
                return this.PointsField;
            }
            set {
                if ((object.ReferenceEquals(this.PointsField, value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GisSessionInfo", Namespace="http://schemas.datacontract.org/2004/07/TGis.RemoteContract")]
    [System.SerializableAttribute()]
    public partial class GisSessionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AliveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CarIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OutOfPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TGis.Viewer.TGisRemote.GisSessionReason ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RoolDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double YField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Alive {
            get {
                return this.AliveField;
            }
            set {
                if ((this.AliveField.Equals(value) != true)) {
                    this.AliveField = value;
                    this.RaisePropertyChanged("Alive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CarId {
            get {
                return this.CarIdField;
            }
            set {
                if ((this.CarIdField.Equals(value) != true)) {
                    this.CarIdField = value;
                    this.RaisePropertyChanged("CarId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OutOfPath {
            get {
                return this.OutOfPathField;
            }
            set {
                if ((this.OutOfPathField.Equals(value) != true)) {
                    this.OutOfPathField = value;
                    this.RaisePropertyChanged("OutOfPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TGis.Viewer.TGisRemote.GisSessionReason Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((this.ReasonField.Equals(value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RoolDirection {
            get {
                return this.RoolDirectionField;
            }
            set {
                if ((this.RoolDirectionField.Equals(value) != true)) {
                    this.RoolDirectionField = value;
                    this.RaisePropertyChanged("RoolDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GisSessionReason", Namespace="http://schemas.datacontract.org/2004/07/TGis.RemoteContract")]
    public enum GisSessionReason : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Add = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Update = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Remove = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GisEventInfo", Namespace="http://schemas.datacontract.org/2004/07/TGis.RemoteContract")]
    [System.SerializableAttribute()]
    public partial class GisEventInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CarIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TGis.Viewer.TGisRemote.GisEventType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double YField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CarId {
            get {
                return this.CarIdField;
            }
            set {
                if ((this.CarIdField.Equals(value) != true)) {
                    this.CarIdField = value;
                    this.RaisePropertyChanged("CarId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TGis.Viewer.TGisRemote.GisEventType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GisEventType", Namespace="http://schemas.datacontract.org/2004/07/TGis.RemoteContract")]
    public enum GisEventType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Connect = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisConnect = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OutOfPath = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RollBackward = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TGisRemote.IGisServiceAblity")]
    public interface IGisServiceAblity {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGisServiceAblity/GetVersion", ReplyAction="http://tempuri.org/IGisServiceAblity/GetVersionResponse")]
        int GetVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGisServiceAblity/VerifyPassword", ReplyAction="http://tempuri.org/IGisServiceAblity/VerifyPasswordResponse")]
        bool VerifyPassword(byte[] pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGisServiceAblity/ModifyPassword", ReplyAction="http://tempuri.org/IGisServiceAblity/ModifyPasswordResponse")]
        void ModifyPassword(byte[] newPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGisServiceAblity/GetCurrentTime", ReplyAction="http://tempuri.org/IGisServiceAblity/GetCurrentTimeResponse")]
        System.DateTime GetCurrentTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGisServiceAblity/GetCarInfo", ReplyAction="http://tempuri.org/IGisServiceAblity/GetCarInfoResponse")]
        TGis.Viewer.TGisRemote.GisCarInfo[] GetCarInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGisServiceAblity/GetPathInfo", ReplyAction="http://tempuri.org/IGisServiceAblity/GetPathInfoResponse")]
        TGis.Viewer.TGisRemote.GisPathInfo[] GetPathInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGisServiceAblity/QuerySessionInfo", ReplyAction="http://tempuri.org/IGisServiceAblity/QuerySessionInfoResponse")]
        TGis.Viewer.TGisRemote.GisSessionInfo[] QuerySessionInfo(out System.DateTime tmCursor, System.DateTime tmStart, System.DateTime tmEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGisServiceAblity/QueryEventInfo", ReplyAction="http://tempuri.org/IGisServiceAblity/QueryEventInfoResponse")]
        TGis.Viewer.TGisRemote.GisEventInfo[] QueryEventInfo(out bool bTobeContinue, System.DateTime tmStart, System.DateTime tmEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGisServiceAblity/AddCarInfo", ReplyAction="http://tempuri.org/IGisServiceAblity/AddCarInfoResponse")]
        bool AddCarInfo(TGis.Viewer.TGisRemote.GisCarInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGisServiceAblity/UpdateCarInfo", ReplyAction="http://tempuri.org/IGisServiceAblity/UpdateCarInfoResponse")]
        bool UpdateCarInfo(TGis.Viewer.TGisRemote.GisCarInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGisServiceAblity/RemoveCarInfo", ReplyAction="http://tempuri.org/IGisServiceAblity/RemoveCarInfoResponse")]
        bool RemoveCarInfo(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGisServiceAblity/AddPathInfo", ReplyAction="http://tempuri.org/IGisServiceAblity/AddPathInfoResponse")]
        bool AddPathInfo(TGis.Viewer.TGisRemote.GisPathInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGisServiceAblity/UpdatePathInfo", ReplyAction="http://tempuri.org/IGisServiceAblity/UpdatePathInfoResponse")]
        bool UpdatePathInfo(TGis.Viewer.TGisRemote.GisPathInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGisServiceAblity/RemovePathInfo", ReplyAction="http://tempuri.org/IGisServiceAblity/RemovePathInfoResponse")]
        bool RemovePathInfo(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGisServiceAblityChannel : TGis.Viewer.TGisRemote.IGisServiceAblity, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GisServiceAblityClient : System.ServiceModel.ClientBase<TGis.Viewer.TGisRemote.IGisServiceAblity>, TGis.Viewer.TGisRemote.IGisServiceAblity {
        
        public GisServiceAblityClient() {
        }
        
        public GisServiceAblityClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GisServiceAblityClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GisServiceAblityClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GisServiceAblityClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GetVersion() {
            return base.Channel.GetVersion();
        }
        
        public bool VerifyPassword(byte[] pass) {
            return base.Channel.VerifyPassword(pass);
        }
        
        public void ModifyPassword(byte[] newPass) {
            base.Channel.ModifyPassword(newPass);
        }
        
        public System.DateTime GetCurrentTime() {
            return base.Channel.GetCurrentTime();
        }
        
        public TGis.Viewer.TGisRemote.GisCarInfo[] GetCarInfo() {
            return base.Channel.GetCarInfo();
        }
        
        public TGis.Viewer.TGisRemote.GisPathInfo[] GetPathInfo() {
            return base.Channel.GetPathInfo();
        }
        
        public TGis.Viewer.TGisRemote.GisSessionInfo[] QuerySessionInfo(out System.DateTime tmCursor, System.DateTime tmStart, System.DateTime tmEnd) {
            return base.Channel.QuerySessionInfo(out tmCursor, tmStart, tmEnd);
        }
        
        public TGis.Viewer.TGisRemote.GisEventInfo[] QueryEventInfo(out bool bTobeContinue, System.DateTime tmStart, System.DateTime tmEnd) {
            return base.Channel.QueryEventInfo(out bTobeContinue, tmStart, tmEnd);
        }
        
        public bool AddCarInfo(TGis.Viewer.TGisRemote.GisCarInfo info) {
            return base.Channel.AddCarInfo(info);
        }
        
        public bool UpdateCarInfo(TGis.Viewer.TGisRemote.GisCarInfo info) {
            return base.Channel.UpdateCarInfo(info);
        }
        
        public bool RemoveCarInfo(int id) {
            return base.Channel.RemoveCarInfo(id);
        }
        
        public bool AddPathInfo(TGis.Viewer.TGisRemote.GisPathInfo info) {
            return base.Channel.AddPathInfo(info);
        }
        
        public bool UpdatePathInfo(TGis.Viewer.TGisRemote.GisPathInfo info) {
            return base.Channel.UpdatePathInfo(info);
        }
        
        public bool RemovePathInfo(int id) {
            return base.Channel.RemovePathInfo(id);
        }
    }
}
